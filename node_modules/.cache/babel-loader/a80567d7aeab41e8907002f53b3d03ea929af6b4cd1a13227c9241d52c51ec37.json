{"ast":null,"code":"var _jsxFileName = \"/home/willbroad/Documents/enock_projects/BMS/frontend/bridge/src/component/Charts.tsx\",\n  _s = $RefreshSig$();\n// src/components/LineChart.tsx\n\nimport React from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\n// src/components/LineChart.tsx\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LineChart = () => {\n  _s();\n  const [series, setSeries] = useState([{\n    name: 'Vibration',\n    data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\n  }]);\n  const options = {\n    chart: {\n      type: 'line',\n      animations: {\n        enabled: true,\n        easing: 'linear',\n        dynamicAnimation: {\n          speed: 1000\n        }\n      }\n    },\n    colors: ['#28a745'],\n    stroke: {\n      curve: 'smooth'\n    },\n    xaxis: {\n      type: 'datetime',\n      categories: ['2023-06-01T00:00:00Z', '2023-06-02T00:00:00Z', '2023-06-03T00:00:00Z', '2023-06-04T00:00:00Z', '2023-06-05T00:00:00Z', '2023-06-06T00:00:00Z', '2023-06-07T00:00:00Z', '2023-06-08T00:00:00Z', '2023-06-09T00:00:00Z']\n    },\n    tooltip: {\n      x: {\n        format: 'dd MMM yyyy'\n      }\n    }\n  };\n  useEffect(() => {\n    // Simulate real-time data update\n    const interval = setInterval(() => {\n      setSeries([{\n        name: 'Vibration',\n        data: series[0].data.map(value => value + Math.random() * 10 - 5)\n      }]);\n    }, 2000);\n    return () => clearInterval(interval);\n  }, [series]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded shadow h-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Vibration Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: series,\n      type: \"line\",\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(LineChart, \"litKoNitkR+RRApZtrLPEkRK5tg=\");\n_c = LineChart;\nexport const AreaChart = () => {\n  const options = {\n    chart: {\n      type: 'area'\n    },\n    series: [{\n      name: 'Sensor Data',\n      data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\n    }],\n    xaxis: {\n      categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Area Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: options.series,\n      type: \"area\",\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_c2 = AreaChart;\nexport default AreaChart;\nexport const BarChart = () => {\n  const options = {\n    chart: {\n      type: 'bar'\n    },\n    series: [{\n      name: 'Sensor Data',\n      data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\n    }],\n    xaxis: {\n      categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Bar Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: options.series,\n      type: \"bar\",\n      height: 200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_c3 = BarChart;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LineChart\");\n$RefreshReg$(_c2, \"AreaChart\");\n$RefreshReg$(_c3, \"BarChart\");","map":{"version":3,"names":["React","ReactApexChart","jsxDEV","_jsxDEV","LineChart","_s","series","setSeries","useState","name","data","options","chart","type","animations","enabled","easing","dynamicAnimation","speed","colors","stroke","curve","xaxis","categories","tooltip","x","format","useEffect","interval","setInterval","map","value","Math","random","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","height","_c","AreaChart","_c2","BarChart","_c3","$RefreshReg$"],"sources":["/home/willbroad/Documents/enock_projects/BMS/frontend/bridge/src/component/Charts.tsx"],"sourcesContent":["// src/components/LineChart.tsx\n\nimport { ApexOptions } from 'apexcharts';\nimport React from 'react';\nimport ReactApexChart from 'react-apexcharts';\n\n// src/components/LineChart.tsx\n\n\n\nexport const LineChart: React.FC = () => {\n    const [series, setSeries] = useState([\n        {\n            name: 'Vibration',\n            data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\n        }\n    ]);\n\n    const options: ApexOptions = {\n        chart: {\n            type: 'line',\n            animations: {\n                enabled: true,\n                easing: 'linear',\n                dynamicAnimation: {\n                    speed: 1000\n                }\n            }\n        },\n        colors: ['#28a745'],\n        stroke: {\n            curve: 'smooth'\n        },\n        xaxis: {\n            type: 'datetime',\n            categories: [\n                '2023-06-01T00:00:00Z',\n                '2023-06-02T00:00:00Z',\n                '2023-06-03T00:00:00Z',\n                '2023-06-04T00:00:00Z',\n                '2023-06-05T00:00:00Z',\n                '2023-06-06T00:00:00Z',\n                '2023-06-07T00:00:00Z',\n                '2023-06-08T00:00:00Z',\n                '2023-06-09T00:00:00Z'\n            ]\n        },\n        tooltip: {\n            x: {\n                format: 'dd MMM yyyy'\n            }\n        }\n    };\n\n    useEffect(() => {\n        // Simulate real-time data update\n        const interval = setInterval(() => {\n            setSeries([\n                {\n                    name: 'Vibration',\n                    data: series[0].data.map((value) => value + Math.random() * 10 - 5)\n                }\n            ]);\n        }, 2000);\n\n        return () => clearInterval(interval);\n    }, [series]);\n\n    return (\n        <div className=\"bg-white p-4 rounded shadow h-full\">\n            <h2 className=\"text-xl font-bold mb-4\">Vibration Over Time</h2>\n            <ReactApexChart options={options} series={series} type=\"line\" height={300} />\n        </div>\n    );\n};\n\n\n\nexport const AreaChart: React.FC = () => {\n    const options: ApexOptions = {\n        chart: {\n            type: 'area'\n        },\n        series: [\n            {\n                name: 'Sensor Data',\n                data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\n            }\n        ],\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n        }\n    };\n\n    return (\n        <div className=\"bg-white p-4 rounded shadow\">\n            <h2 className=\"text-xl font-bold mb-4\">Area Chart</h2>\n            <ReactApexChart options={options} series={options.series} type=\"area\" height={300} />\n        </div>\n    );\n};\n\nexport default AreaChart;\n\n\nexport const BarChart: React.FC = () => {\n    const options: ApexOptions = {\n        chart: {\n            type: 'bar'\n        },\n        series: [\n            {\n                name: 'Sensor Data',\n                data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\n            }\n        ],\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n        }\n    };\n\n    return (\n        <div className=\"bg-white p-4 rounded shadow\">\n            <h2 className=\"text-xl font-bold mb-4\">Bar Chart</h2>\n            <ReactApexChart options={options} series={options.series} type=\"bar\" height={200} />\n        </div>\n    );\n};\n\n"],"mappings":";;AAAA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;;AAE7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,OAAO,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,CACjC;IACIC,IAAI,EAAE,WAAW;IACjBC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG;EAC9C,CAAC,CACJ,CAAC;EAEF,MAAMC,OAAoB,GAAG;IACzBC,KAAK,EAAE;MACHC,IAAI,EAAE,MAAM;MACZC,UAAU,EAAE;QACRC,OAAO,EAAE,IAAI;QACbC,MAAM,EAAE,QAAQ;QAChBC,gBAAgB,EAAE;UACdC,KAAK,EAAE;QACX;MACJ;IACJ,CAAC;IACDC,MAAM,EAAE,CAAC,SAAS,CAAC;IACnBC,MAAM,EAAE;MACJC,KAAK,EAAE;IACX,CAAC;IACDC,KAAK,EAAE;MACHT,IAAI,EAAE,UAAU;MAChBU,UAAU,EAAE,CACR,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB;IAE9B,CAAC;IACDC,OAAO,EAAE;MACLC,CAAC,EAAE;QACCC,MAAM,EAAE;MACZ;IACJ;EACJ,CAAC;EAEDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BtB,SAAS,CAAC,CACN;QACIE,IAAI,EAAE,WAAW;QACjBC,IAAI,EAAEJ,MAAM,CAAC,CAAC,CAAC,CAACI,IAAI,CAACoB,GAAG,CAAEC,KAAK,IAAKA,KAAK,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC;MACtE,CAAC,CACJ,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACN,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACtB,MAAM,CAAC,CAAC;EAEZ,oBACIH,OAAA;IAAKgC,SAAS,EAAC,oCAAoC;IAAAC,QAAA,gBAC/CjC,OAAA;MAAIgC,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/DrC,OAAA,CAACF,cAAc;MAACU,OAAO,EAAEA,OAAQ;MAACL,MAAM,EAAEA,MAAO;MAACO,IAAI,EAAC,MAAM;MAAC4B,MAAM,EAAE;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5E,CAAC;AAEd,CAAC;AAACnC,EAAA,CAhEWD,SAAmB;AAAAsC,EAAA,GAAnBtC,SAAmB;AAoEhC,OAAO,MAAMuC,SAAmB,GAAGA,CAAA,KAAM;EACrC,MAAMhC,OAAoB,GAAG;IACzBC,KAAK,EAAE;MACHC,IAAI,EAAE;IACV,CAAC;IACDP,MAAM,EAAE,CACJ;MACIG,IAAI,EAAE,aAAa;MACnBC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG;IAC9C,CAAC,CACJ;IACDY,KAAK,EAAE;MACHC,UAAU,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IAC9E;EACJ,CAAC;EAED,oBACIpB,OAAA;IAAKgC,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBACxCjC,OAAA;MAAIgC,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtDrC,OAAA,CAACF,cAAc;MAACU,OAAO,EAAEA,OAAQ;MAACL,MAAM,EAAEK,OAAO,CAACL,MAAO;MAACO,IAAI,EAAC,MAAM;MAAC4B,MAAM,EAAE;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAEd,CAAC;AAACI,GAAA,GAtBWD,SAAmB;AAwBhC,eAAeA,SAAS;AAGxB,OAAO,MAAME,QAAkB,GAAGA,CAAA,KAAM;EACpC,MAAMlC,OAAoB,GAAG;IACzBC,KAAK,EAAE;MACHC,IAAI,EAAE;IACV,CAAC;IACDP,MAAM,EAAE,CACJ;MACIG,IAAI,EAAE,aAAa;MACnBC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG;IAC9C,CAAC,CACJ;IACDY,KAAK,EAAE;MACHC,UAAU,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IAC9E;EACJ,CAAC;EAED,oBACIpB,OAAA;IAAKgC,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBACxCjC,OAAA;MAAIgC,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrDrC,OAAA,CAACF,cAAc;MAACU,OAAO,EAAEA,OAAQ;MAACL,MAAM,EAAEK,OAAO,CAACL,MAAO;MAACO,IAAI,EAAC,KAAK;MAAC4B,MAAM,EAAE;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnF,CAAC;AAEd,CAAC;AAACM,GAAA,GAtBWD,QAAkB;AAAA,IAAAH,EAAA,EAAAE,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}