{"ast":null,"code":"var _jsxFileName = \"/home/willbroad/Documents/enock_projects/BMS/frontend/bridge/src/context/AuthProvider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth } from '../utils/firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, sendPasswordResetEmail, onAuthStateChanged } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function useAuth() {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const signup = (email, password) => {\n    return createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n      setCurrentUser(userCredential.user);\n    });\n  };\n  const signin = (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      setCurrentUser(userCredential.user);\n    });\n  };\n  const signout = () => {\n    return signOut(auth).then(() => {\n      setCurrentUser(null);\n    });\n  };\n  const resetPassword = email => {\n    return sendPasswordResetEmail(auth, email);\n  };\n\n  // const updateEmail = (email: string) => {\n  //     if (currentUser) {\n  //         return updateEmail(currentUser, email);\n  //     } else {\n  //         return Promise.reject('No user is currently signed in');\n  //     }\n  // };\n\n  // const updatePassword = (password: string) => {\n  //     if (currentUser) {\n  //         return updatePassword(currentUser, password);\n  //     } else {\n  //         return Promise.reject('No user is currently signed in');\n  //     }\n  // };\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signup,\n    signin,\n    signout,\n    resetPassword\n    // updateEmail,\n    // updatePassword,\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","sendPasswordResetEmail","onAuthStateChanged","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","signup","email","password","then","userCredential","user","signin","signout","resetPassword","unsubscribe","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/willbroad/Documents/enock_projects/BMS/frontend/bridge/src/context/AuthProvider.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { auth } from '../utils/firebase';\nimport { User, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, sendPasswordResetEmail, updateEmail, updatePassword, onAuthStateChanged } from 'firebase/auth';\n\ntype AuthContextType = {\n    currentUser: User | null;\n    signup: (email: string, password: string) => Promise<void>;\n    signin: (email: string, password: string) => Promise<void>;\n    signout: () => Promise<void>;\n    resetPassword: (email: string) => Promise<void>;\n    // updateEmail: (email: string) => Promise<void>;\n    // updatePassword: (password: string) => Promise<void>;\n};\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function useAuth() {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n}\n\ntype AuthProviderProps = {\n    children: ReactNode;\n};\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n    const [currentUser, setCurrentUser] = useState<User | null>(null);\n    const [loading, setLoading] = useState(true);\n\n    const signup = (email: string, password: string) => {\n        return createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n            setCurrentUser(userCredential.user);\n        });\n    };\n\n    const signin = (email: string, password: string) => {\n        return signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n            setCurrentUser(userCredential.user);\n        });\n    };\n\n    const signout = () => {\n        return signOut(auth).then(() => {\n            setCurrentUser(null);\n        });\n    };\n\n    const resetPassword = (email: string) => {\n        return sendPasswordResetEmail(auth, email);\n    };\n\n    // const updateEmail = (email: string) => {\n    //     if (currentUser) {\n    //         return updateEmail(currentUser, email);\n    //     } else {\n    //         return Promise.reject('No user is currently signed in');\n    //     }\n    // };\n\n    // const updatePassword = (password: string) => {\n    //     if (currentUser) {\n    //         return updatePassword(currentUser, password);\n    //     } else {\n    //         return Promise.reject('No user is currently signed in');\n    //     }\n    // };\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\n            setCurrentUser(user);\n            setLoading(false);\n        });\n\n        return unsubscribe;\n    }, []);\n\n    const value: AuthContextType = {\n        currentUser,\n        signup,\n        signin,\n        signout,\n        resetPassword,\n        // updateEmail,\n        // updatePassword,\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AACxF,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAAeC,8BAA8B,EAAEC,0BAA0B,EAAEC,OAAO,EAAEC,sBAAsB,EAA+BC,kBAAkB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYnL,MAAMC,WAAW,gBAAGZ,aAAa,CAA8Ba,SAAS,CAAC;AAEzE,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,OAAO,GAAGf,UAAU,CAACW,WAAW,CAAC;EACvC,IAAI,CAACI,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA,OAAOD,OAAO;AAClB;AAACD,EAAA,CANeD,OAAO;AAYvB,OAAO,SAASI,YAAYA,CAAC;EAAEC;AAA4B,CAAC,EAAE;EAAAC,GAAA;EAC1D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAc,IAAI,CAAC;EACjE,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMuB,MAAM,GAAGA,CAACC,KAAa,EAAEC,QAAgB,KAAK;IAChD,OAAOtB,8BAA8B,CAACD,IAAI,EAAEsB,KAAK,EAAEC,QAAQ,CAAC,CAACC,IAAI,CAACC,cAAc,IAAI;MAChFP,cAAc,CAACO,cAAc,CAACC,IAAI,CAAC;IACvC,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,MAAM,GAAGA,CAACL,KAAa,EAAEC,QAAgB,KAAK;IAChD,OAAOrB,0BAA0B,CAACF,IAAI,EAAEsB,KAAK,EAAEC,QAAQ,CAAC,CAACC,IAAI,CAACC,cAAc,IAAI;MAC5EP,cAAc,CAACO,cAAc,CAACC,IAAI,CAAC;IACvC,CAAC,CAAC;EACN,CAAC;EAED,MAAME,OAAO,GAAGA,CAAA,KAAM;IAClB,OAAOzB,OAAO,CAACH,IAAI,CAAC,CAACwB,IAAI,CAAC,MAAM;MAC5BN,cAAc,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC;EACN,CAAC;EAED,MAAMW,aAAa,GAAIP,KAAa,IAAK;IACrC,OAAOlB,sBAAsB,CAACJ,IAAI,EAAEsB,KAAK,CAAC;EAC9C,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAvB,SAAS,CAAC,MAAM;IACZ,MAAM+B,WAAW,GAAGzB,kBAAkB,CAACL,IAAI,EAAG0B,IAAI,IAAK;MACnDR,cAAc,CAACQ,IAAI,CAAC;MACpBN,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;IAEF,OAAOU,WAAW;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAsB,GAAG;IAC3Bd,WAAW;IACXI,MAAM;IACNM,MAAM;IACNC,OAAO;IACPC;IACA;IACA;EACJ,CAAC;EAED,oBACItB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAhB,QAAA,EAC9B,CAACI,OAAO,IAAIJ;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAE/B;AAACpB,GAAA,CAlEeF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAoE5B,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}